{"version":3,"sources":["ContactForm.js","ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","props","state","firstName","lastName","address","phoneNumber","handleSubmit","bind","handleInput","event","this","setState","target","name","value","preventDefault","addContact","onSubmit","onChange","type","placeholder","Component","ContactList","contacts","map","contact","id","App","counter","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRA0CeA,E,kDAvCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAW,GACXC,SAAU,GACVC,QAAS,GACTC,YAAa,IAEf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBATF,E,+CAYlB,SAAYE,GACVC,KAAKC,SAAL,eAAiBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,0BAGrD,SAAaL,GACXA,EAAMM,iBACNL,KAAKV,MAAMgB,WAAWN,KAAKT,OAC3BS,KAAKC,SAAS,CAACT,UAAW,GAAIC,SAAU,GAAIC,QAAS,GAAIC,YAAa,O,oBAOxE,WACE,OACE,uBAAMY,SAAUP,KAAKJ,aAArB,UACE,uBAAOQ,MAAOJ,KAAKT,MAAMC,UAAWgB,SAAUR,KAAKF,YAAaW,KAAK,OAAON,KAAK,YAAYO,YAAY,eACzG,uBAAON,MAAOJ,KAAKT,MAAME,SAAUe,SAAUR,KAAKF,YAAaW,KAAK,OAAON,KAAK,WAAWO,YAAY,cACvG,uBAAON,MAAOJ,KAAKT,MAAMG,QAASc,SAAUR,KAAKF,YAAaW,KAAK,OAAON,KAAK,UAAUO,YAAY,YACrG,uBAAON,MAAOJ,KAAKT,MAAMI,YAAaa,SAAUR,KAAKF,YAAaW,KAAK,OAAON,KAAK,cAAcO,YAAY,iBAC7G,mD,GAlCkBC,aCiBXC,MAjBf,SAAqBtB,GAEnB,IAAMuB,EAAWvB,EAAMuB,SAASC,KAAI,SAACC,GAAD,OAClC,+BACA,8BAAIA,EAAQvB,UAAZ,IAAwBuB,EAAQtB,YAChC,4BAAIsB,EAAQrB,UACZ,4BAAIqB,EAAQpB,gBAHHoB,EAAQC,OAMnB,OACE,6BAAKH,KC2BMI,E,kDAjCb,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXsB,SAAU,GACVK,QAAS,GAEX,EAAKZ,WAAa,EAAKA,WAAWT,KAAhB,gBAND,E,8CASnB,SAAWkB,GACTA,EAAQC,GAAKhB,KAAKT,MAAM2B,QACxB,IAAML,EAAQ,YAAQb,KAAKT,MAAMsB,UACjCA,EAASM,KAAKJ,GACdf,KAAKC,UAAS,SAACV,GAAD,MAAY,CAACsB,WAAUK,QAAS3B,EAAM2B,QAAU,Q,oBAOhE,WACE,OACE,qCACE,0CADF,IAEE,cAAC,EAAD,CAAaZ,WAAYN,KAAKM,aAC9B,cAAC,EAAD,CAAaO,SAAUb,KAAKT,MAAMsB,kB,GA1BxBF,aCOHS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dbbf9959.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      address: '',\n      phoneNumber: '',\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n   }\n\n   handleInput(event) {\n     this.setState({ [event.target.name]: event.target.value })\n   }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addContact(this.state);\n    this.setState({firstName: '', lastName: '', address: '', phoneNumber: ''})\n  }\n\n\n\n\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <input value={this.state.firstName} onChange={this.handleInput} type=\"text\" name=\"firstName\" placeholder=\"First Name\"/>\n        <input value={this.state.lastName} onChange={this.handleInput} type=\"text\" name=\"lastName\" placeholder=\"Last Name\"/>\n        <input value={this.state.address} onChange={this.handleInput} type=\"text\" name=\"address\" placeholder=\"Address\"/>\n        <input value={this.state.phoneNumber} onChange={this.handleInput} type=\"text\" name=\"phoneNumber\" placeholder=\"Phone Number\"/>\n        <button>Submit</button>\n      </form>\n    )\n  }\n}\n\nexport default ContactForm\n","import { Component } from 'react';\n\nfunction ContactList(props) {\n\n  const contacts = props.contacts.map((contact) => (\n    <li key={contact.id}>\n    <p>{contact.firstName} {contact.lastName}</p>\n    <p>{contact.address}</p>\n    <p>{contact.phoneNumber}</p>\n    </li>\n  ));\n  return(\n    <ul>{contacts}</ul>\n  )\n}\n\n\n\n\nexport default ContactList\n","import { Component } from 'react';\nimport './App.css';\nimport ContactForm from './ContactForm'\nimport ContactList from './ContactList'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      counter: 0,\n    }\n    this.addContact = this.addContact.bind(this);\n  }\n\n  addContact(contact) {\n    contact.id = this.state.counter;\n    const contacts = [ ...this.state.contacts ];\n    contacts.push(contact);\n    this.setState((state) => ({contacts, counter: state.counter + 1}))\n  }\n\n\n\n\n\n  render() {\n    return(\n      <>\n        <h1>Contacts</h1>,\n        <ContactForm addContact={this.addContact}/>\n        <ContactList contacts={this.state.contacts}/>\n      </>\n    )\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}